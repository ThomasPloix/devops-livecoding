name: CI devops 2024
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    steps:
      #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

      #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      #finally build your app with the latest command
      - name: Build and test with Maven
        working-directory: ./simple-api
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=ThomasPloix_devops-livecoding -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}  -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./pom.xml


  # define job to build and publish docker image
  build-and-push-docker-image:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./simple-api
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-simple-api:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

  build-and-push-docker-image-database:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push database
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-database:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}



  build-and-push-docker-image-proxy-server:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push front server
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./http-server
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-proxy-server:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}


  build-and-push-docker-image-front-server:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push front server
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./devops-front-main
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-front-server:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}



  build-and-push-docker-ansible:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push ansible server
        uses: docker/push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./ansible
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-ansible:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    needs: [build-and-push-docker-image, build-and-push-docker-image-database, build-and-push-docker-image-proxy-server, build-and-push-docker-image-front-server]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{secrets.SECRET_ID_RSA}}

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Ansible Playbook in Docker
        run: |
          docker run --rm \
            -v "$PWD":/ansible/playbooks \
            -v ~/.ssh:/root/.ssh \
            tp-devops-ansible:latest \
            ansible-playbook /ansible/playbook.yml -i /ansible/inventories/setup.yml

      - name: Clean up SSH key
        run: rm -f ~/.ssh/id_rsa
